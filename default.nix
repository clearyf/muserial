# Generated by carnix 0.6.6: carnix -o default.nix --src ./. Cargo.lock
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  muserial = f: muserial_0_1_0 { features = muserial_0_1_0_features { muserial_0_1_0 = f; }; };
  argparse_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "argparse";
    version = "0.2.1";
    authors = [ "paul@colomiets.name" ];
    sha256 = "1ikpi507ppxv5iw8vi8wps081r5p3bliaji35kw4468pbmg4gx5b";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.7.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1hr72xg5slm0z4pxs2hiy4wcyx3jva70h58b7mid8l0a4c8f7gn5";
    inherit dependencies buildDependencies features;
  };
  epoll_2_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "epoll";
    version = "2.1.0";
    authors = [ "Nathan Sizemore <nathanrsizemore@gmail.com>" ];
    sha256 = "19j97yzyyivq54zdic45my3q73a29w429ddgn8d8avpfzrk84xpc";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_32_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.32";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1i8njlar6v9qvmkyfvwzhxrvkqw6ijp8fqdnya5csqixxz18a532";
    inherit dependencies buildDependencies features;
  };
  muserial_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "muserial";
    version = "0.1.0";
    authors = [ "Fionn Cleary <fionn.cleary@streamunlimited.com>" ];
    src = ./.;
    inherit dependencies buildDependencies features;
  };
  argparse_0_2_1 = { features?(argparse_0_2_1_features {}) }: argparse_0_2_1_ {};
  argparse_0_2_1_features = f: updateFeatures f (rec {
    argparse_0_2_1.default = (f.argparse_0_2_1.default or true);
  }) [];
  bitflags_0_7_0 = { features?(bitflags_0_7_0_features {}) }: bitflags_0_7_0_ {};
  bitflags_0_7_0_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = (f.bitflags_0_7_0.default or true);
  }) [];
  epoll_2_1_0 = { features?(epoll_2_1_0_features {}) }: epoll_2_1_0_ {
    dependencies = mapFeatures features ([ bitflags_0_7_0 libc_0_2_32 ]);
  };
  epoll_2_1_0_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = true;
    epoll_2_1_0.default = (f.epoll_2_1_0.default or true);
    libc_0_2_32.default = true;
  }) [ bitflags_0_7_0_features libc_0_2_32_features ];
  libc_0_2_32 = { features?(libc_0_2_32_features {}) }: libc_0_2_32_ {
    features = mkFeatures (features.libc_0_2_32 or {});
  };
  libc_0_2_32_features = f: updateFeatures f (rec {
    libc_0_2_32.default = (f.libc_0_2_32.default or true);
    libc_0_2_32.use_std =
      (f.libc_0_2_32.use_std or false) ||
      (f.libc_0_2_32.default or false) ||
      (libc_0_2_32.default or false);
  }) [];
  muserial_0_1_0 = { features?(muserial_0_1_0_features {}) }: muserial_0_1_0_ {
    dependencies = mapFeatures features ([ argparse_0_2_1 epoll_2_1_0 libc_0_2_32 ]);
  };
  muserial_0_1_0_features = f: updateFeatures f (rec {
    argparse_0_2_1.default = true;
    epoll_2_1_0.default = true;
    libc_0_2_32.default = true;
    muserial_0_1_0.default = (f.muserial_0_1_0.default or true);
  }) [ argparse_0_2_1_features epoll_2_1_0_features libc_0_2_32_features ];
}
